diff --color -upr a/tensorflowcompiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc tensorflow/compiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc
--- a/tensorflowcompiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc	2021-05-12 21:26:41.000000000 +0800
+++ b/tensorflow/compiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc	2021-10-26 13:43:26.628572583 +0800
@@ -730,7 +730,7 @@ StatusOr<std::vector<uint8>> EmitModuleT
   // TODO(whchung@gmail.com): change to tensorflow::ROCmRoot() after
   // ROCm-Device-Libs PR.
   std::string lld_path_1 = tensorflow::io::JoinPath("/opt/rocm", "hcc/bin");
-  std::string lld_path_2 = tensorflow::io::JoinPath("/opt/rocm", "llvm/bin");
+  std::string lld_path_2 = tensorflow::io::JoinPath("/opt/gentoo/usr/lib/llvm/roc", "bin");
   auto lld_program =
       llvm::sys::findProgramByName("ld.lld", {lld_path_1, lld_path_2});
   if (!lld_program) {
diff --color -upr a/tensorflowcore/platform/default/rocm_rocdl_path.cc tensorflow/core/platform/default/rocm_rocdl_path.cc
--- a/tensorflowcore/platform/default/rocm_rocdl_path.cc	2021-05-12 21:26:41.000000000 +0800
+++ b/tensorflow/core/platform/default/rocm_rocdl_path.cc	2021-10-26 13:43:26.800571563 +0800
@@ -37,7 +37,7 @@ string RocmRoot() {
 
 string RocdlRoot() {
 #if TF_ROCM_VERSION >= 30900
-  return tensorflow::io::JoinPath(tensorflow::RocmRoot(), "amdgcn/bitcode");
+  return tensorflow::io::JoinPath(tensorflow::RocmRoot(), "lib/amdgcn/bitcode");
 #else
   return tensorflow::io::JoinPath(tensorflow::RocmRoot(), "lib");
 #endif
diff --color -upr a/tensorflowstream_executor/gpu/asm_compiler.cc tensorflow/stream_executor/gpu/asm_compiler.cc
--- a/tensorflowstream_executor/gpu/asm_compiler.cc	2021-05-12 21:26:41.000000000 +0800
+++ b/tensorflow/stream_executor/gpu/asm_compiler.cc	2021-10-26 13:43:26.956570635 +0800
@@ -384,7 +384,7 @@ static std::string findRocmExecutable(co
 port::StatusOr<std::vector<uint8>> BundleGpuAsm(
     std::vector<HsacoImage> images, const std::string rocm_root_dir) {
   std::string clang_offload_bundler_path =
-      findRocmExecutable("llvm/bin/clang-offload-bundler", rocm_root_dir);
+      findRocmExecutable("lib/llvm/roc/bin/clang-offload-bundler", rocm_root_dir);
 
   // Initialise the "--inputs" / "--targets" arguments for the
   // clang-offload-bundler with a dummy file / host target triple...
