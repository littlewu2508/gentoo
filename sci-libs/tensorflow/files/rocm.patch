diff --color -upr orig/third_party/gpus/find_rocm_config.py tensorflow-2.5.0/third_party/gpus/find_rocm_config.py
--- orig/third_party/gpus/find_rocm_config.py	2021-10-12 20:40:29.201725834 +0800
+++ tensorflow-2.5.0/third_party/gpus/find_rocm_config.py	2021-10-12 20:40:53.109621436 +0800
@@ -70,13 +70,8 @@ def _get_header_version(path, name):
 def _find_rocm_config(rocm_install_path):
 
   def rocm_version_numbers(path):
-    version_file = os.path.join(path, ".info/version-dev")
-    if not os.path.exists(version_file):
-      raise ConfigError('ROCm version file "{}" not found'.format(version_file))
-    version_numbers = []
-    with open(version_file) as f:
-      version_string = f.read().strip()
-      version_numbers = version_string.split(".")
+    version_string = "4.3.0-"
+    version_numbers = version_string.split(".")
     major = int(version_numbers[0])
     minor = int(version_numbers[1])
     patch = int(version_numbers[2].split("-")[0])
@@ -94,7 +89,7 @@ def _find_rocm_config(rocm_install_path)
 def _find_hipruntime_config(rocm_install_path):
 
   def hipruntime_version_number(path):
-    version_file = os.path.join(path, "hip/include/hip/hip_version.h")
+    version_file = os.path.join(path, "lib/hip/include/hip/hip_version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'HIP Runtime version file "{}" not found'.format(version_file))
@@ -116,7 +111,7 @@ def _find_hipruntime_config(rocm_install
 def _find_miopen_config(rocm_install_path):
 
   def miopen_version_numbers(path):
-    version_file = os.path.join(path, "miopen/include/miopen/version.h")
+    version_file = os.path.join(path, "include/miopen/version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'MIOpen version file "{}" not found'.format(version_file))
@@ -139,8 +134,8 @@ def _find_rocblas_config(rocm_install_pa
 
   def rocblas_version_numbers(path):
     possible_version_files = [
-        "rocblas/include/rocblas-version.h",  # ROCm 3.7 and prior
-        "rocblas/include/internal/rocblas-version.h",  # ROCm 3.8
+        "include/rocblas/rocblas-version.h",  # ROCm 3.7 and prior
+        "include/rocblas/internal/rocblas-version.h",  # ROCm 3.8
     ]
     version_file = None
     for f in possible_version_files:
@@ -170,7 +165,7 @@ def _find_rocblas_config(rocm_install_pa
 def _find_rocrand_config(rocm_install_path):
 
   def rocrand_version_number(path):
-    version_file = os.path.join(path, "rocrand/include/rocrand_version.h")
+    version_file = os.path.join(path, "include/rocrand/rocrand_version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'rocblas version file "{}" not found'.format(version_file))
@@ -187,7 +182,7 @@ def _find_rocrand_config(rocm_install_pa
 def _find_rocfft_config(rocm_install_path):
 
   def rocfft_version_numbers(path):
-    version_file = os.path.join(path, "rocfft/include/rocfft-version.h")
+    version_file = os.path.join(path, "include/rocFFT/rocfft-version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'rocfft version file "{}" not found'.format(version_file))
@@ -209,7 +204,7 @@ def _find_rocfft_config(rocm_install_pat
 def _find_hipfft_config(rocm_install_path):
 
   def hipfft_version_numbers(path):
-    version_file = os.path.join(path, "hipfft/include/hipfft-version.h")
+    version_file = os.path.join(path, "include/hipfft/hipfft-version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'hipfft version file "{}" not found'.format(version_file))
@@ -231,7 +226,7 @@ def _find_hipfft_config(rocm_install_pat
 def _find_roctracer_config(rocm_install_path):
 
   def roctracer_version_numbers(path):
-    version_file = os.path.join(path, "roctracer/include/roctracer.h")
+    version_file = os.path.join(path, "include/roctracer/roctracer.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'roctracer version file "{}" not found'.format(version_file))
@@ -254,7 +249,7 @@ def _find_roctracer_config(rocm_install_
 def _find_hipsparse_config(rocm_install_path):
 
   def hipsparse_version_numbers(path):
-    version_file = os.path.join(path, "hipsparse/include/hipsparse-version.h")
+    version_file = os.path.join(path, "include/hipsparse/hipsparse-version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'hipsparse version file "{}" not found'.format(version_file))
@@ -276,7 +271,7 @@ def _find_hipsparse_config(rocm_install_
 def _find_rocsolver_config(rocm_install_path):
 
   def rocsolver_version_numbers(path):
-    version_file = os.path.join(path, "rocsolver/include/rocsolver-version.h")
+    version_file = os.path.join(path, "include/rocsolver/rocsolver-version.h")
     if not os.path.exists(version_file):
       raise ConfigError(
           'rocsolver version file "{}" not found'.format(version_file))
diff --color -upr orig/third_party/gpus/find_rocm_config.py.gz.base64 tensorflow-2.5.0/third_party/gpus/find_rocm_config.py.gz.base64
--- orig/third_party/gpus/find_rocm_config.py.gz.base64	2021-10-12 20:40:29.201725834 +0800
+++ tensorflow-2.5.0/third_party/gpus/find_rocm_config.py.gz.base64	2021-10-12 20:40:55.245612117 +0800
@@ -1 +1 @@
-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
\ No newline at end of file
+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
\ No newline at end of file
