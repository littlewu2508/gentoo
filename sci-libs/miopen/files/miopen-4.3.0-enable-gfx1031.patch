diff --color -upr orig/src/include/miopen/solver/implicitgemm_util.hpp MIOpen-rocm-4.3.0/src/include/miopen/solver/implicitgemm_util.hpp
--- orig/src/include/miopen/solver/implicitgemm_util.hpp	2021-10-06 21:04:47.161871309 +0800
+++ MIOpen-rocm-4.3.0/src/include/miopen/solver/implicitgemm_util.hpp	2021-10-06 21:04:49.937805044 +0800
@@ -48,9 +48,9 @@ MIOPEN_DECLARE_ENV_VAR(MIOPEN_DEBUG_CONV
 // due to compiler bug, iGEMM xdlops kernels fail verification in some cases, if using "-O3" flag,
 // (but will pass verification with "-O1" flag)
 #define WORKAROUND_SWDEV_251757 1
-// although gfx1030 supports buffer instructions,but it not work properly when we use the
+// although gfx1031 supports buffer instructions,but it not work properly when we use the
 // corresponding llvm intrinsic functions
-// so we disable using those llvm intrinsic functions on gfx1030
+// so we disable using those llvm intrinsic functions on gfx1031
 #define WORKAROUND_MIOPEN_ISSUE_557 1
 
 namespace miopen {
@@ -747,7 +747,7 @@ static inline bool is_use_amd_buffer_loa
 {
 #if WORKAROUND_MIOPEN_ISSUE_557
     const auto device_name = ctx.GetStream().GetDeviceName();
-    return !StartsWith(device_name, "gfx1030");
+    return !StartsWith(device_name, "gfx1031");
 #else
     return true;
 #endif
@@ -756,7 +756,7 @@ static inline bool is_use_amd_buffer_loa
 static inline bool is_use_v_fmac_f32(const ConvolutionContext& ctx)
 {
     const auto device_name = ctx.GetStream().GetDeviceName();
-    return StartsWith(device_name, "gfx1030");
+    return StartsWith(device_name, "gfx1031");
 }
 
 template <typename T>
@@ -872,7 +872,7 @@ static inline bool IsComposableKernelSup
            StartsWith(c.GetStream().GetDeviceName(), "gfx906") ||
            StartsWith(c.GetStream().GetDeviceName(), "gfx908") ||
            StartsWith(c.GetStream().GetDeviceName(), "gfx90a") ||
-           StartsWith(c.GetStream().GetDeviceName(), "gfx1030");
+           StartsWith(c.GetStream().GetDeviceName(), "gfx1031");
 }
 
 } // namespace solver
diff --color -upr orig/src/kernels/batchnorm_functions.h MIOpen-rocm-4.3.0/src/kernels/batchnorm_functions.h
--- orig/src/kernels/batchnorm_functions.h	2021-10-06 21:04:47.165871213 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/batchnorm_functions.h	2021-10-06 21:04:49.937805044 +0800
@@ -143,8 +143,8 @@
 #define MIO_RUNNING_RESULT 0
 #endif
 
-#ifndef MIO_BN_GFX1030
-#define MIO_BN_GFX1030 0
+#ifndef MIO_BN_GFX1031
+#define MIO_BN_GFX1031 0
 #endif
 
 #define UNUSED __attribute__((__unused__))
diff --color -upr orig/src/kernels/composable_kernel/include/utility/config.hpp MIOpen-rocm-4.3.0/src/kernels/composable_kernel/include/utility/config.hpp
--- orig/src/kernels/composable_kernel/include/utility/config.hpp	2021-10-06 21:04:47.165871213 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/composable_kernel/include/utility/config.hpp	2021-10-06 21:04:49.937805044 +0800
@@ -38,7 +38,7 @@
 #endif
 #endif
 
-// gfx1030 does not support V_MAD/V_MAC,but can use v_fmac_f32
+// gfx1031 does not support V_MAD/V_MAC,but can use v_fmac_f32
 #ifndef CK_USE_AMD_V_FMAC_F32
 #define CK_USE_AMD_V_FMAC_F32 0
 #endif
diff --color -upr orig/src/kernels/MIOpenBatchNormActivBwdPerAct.cl MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivBwdPerAct.cl
--- orig/src/kernels/MIOpenBatchNormActivBwdPerAct.cl	2021-10-06 21:04:47.161871309 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivBwdPerAct.cl	2021-10-06 21:04:49.937805044 +0800
@@ -33,7 +33,7 @@
 #pragma clang diagnostic ignored "-Wsometimes-uninitialized"
 #endif
 
-#if(MIO_BN_GFX1030 == 1 && __AMDGCN__)
+#if(MIO_BN_GFX1031 == 1 && __AMDGCN__)
 #undef __AMDGCN__
 #endif
 
diff --color -upr orig/src/kernels/MIOpenBatchNormActivBwdSpatial.cl MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivBwdSpatial.cl
--- orig/src/kernels/MIOpenBatchNormActivBwdSpatial.cl	2021-10-06 21:04:47.161871309 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivBwdSpatial.cl	2021-10-06 21:04:49.937805044 +0800
@@ -31,7 +31,7 @@
 #pragma clang diagnostic ignored "-Wsometimes-uninitialized"
 #endif
 
-#if(MIO_BN_GFX1030 == 1 && __AMDGCN__)
+#if(MIO_BN_GFX1031 == 1 && __AMDGCN__)
 #undef __AMDGCN__
 #endif
 
diff --color -upr orig/src/kernels/MIOpenBatchNormActivFwdTrainSpatial.cl MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivFwdTrainSpatial.cl
--- orig/src/kernels/MIOpenBatchNormActivFwdTrainSpatial.cl	2021-10-06 21:04:47.161871309 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormActivFwdTrainSpatial.cl	2021-10-06 21:04:49.937805044 +0800
@@ -32,7 +32,7 @@
 #pragma clang diagnostic ignored "-Wsometimes-uninitialized"
 #endif
 
-#if(MIO_BN_GFX1030 == 1 && __AMDGCN__)
+#if(MIO_BN_GFX1031 == 1 && __AMDGCN__)
 #undef __AMDGCN__
 #endif
 
diff --color -upr orig/src/kernels/MIOpenBatchNormBwdSpatial.cl MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormBwdSpatial.cl
--- orig/src/kernels/MIOpenBatchNormBwdSpatial.cl	2021-10-06 21:04:47.161871309 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormBwdSpatial.cl	2021-10-06 21:04:49.937805044 +0800
@@ -32,7 +32,7 @@
 #pragma clang diagnostic ignored "-Wsometimes-uninitialized"
 #endif
 
-#if(MIO_BN_GFX1030 == 1 && __AMDGCN__)
+#if(MIO_BN_GFX1031 == 1 && __AMDGCN__)
 #undef __AMDGCN__
 #endif
 
diff --color -upr orig/src/kernels/MIOpenBatchNormFwdTrainSpatial.cl MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormFwdTrainSpatial.cl
--- orig/src/kernels/MIOpenBatchNormFwdTrainSpatial.cl	2021-10-06 21:04:47.165871213 +0800
+++ MIOpen-rocm-4.3.0/src/kernels/MIOpenBatchNormFwdTrainSpatial.cl	2021-10-06 21:04:49.941804948 +0800
@@ -32,7 +32,7 @@
 #pragma clang diagnostic ignored "-Wsometimes-uninitialized"
 #endif
 
-#if(MIO_BN_GFX1030 == 1 && __AMDGCN__)
+#if(MIO_BN_GFX1031 == 1 && __AMDGCN__)
 #undef __AMDGCN__
 #endif
 
diff --color -upr orig/src/md_graph.cpp MIOpen-rocm-4.3.0/src/md_graph.cpp
--- orig/src/md_graph.cpp	2021-10-06 21:04:47.337867104 +0800
+++ MIOpen-rocm-4.3.0/src/md_graph.cpp	2021-10-06 21:04:49.941804948 +0800
@@ -723,8 +723,8 @@ void FusionMDGraph::InitConv(FusionMDGra
 
             add_v21_wino("gfx9", {"gfx900", "gfx906", "gfx908"}, 1);
             add_v21_wino("gfx9", {"gfx900", "gfx906", "gfx908"}, 2);
-            add_v21_wino("gfx10", {"gfx1011", "gfx1012", "gfx1030"}, 1);
-            add_v21_wino("gfx10", {"gfx1011", "gfx1012", "gfx1030"}, 2);
+            add_v21_wino("gfx10", {"gfx1011", "gfx1012", "gfx1031"}, 1);
+            add_v21_wino("gfx10", {"gfx1011", "gfx1012", "gfx1031"}, 2);
         }
     }
 
diff --color -upr orig/src/ocl/batchnormocl.cpp MIOpen-rocm-4.3.0/src/ocl/batchnormocl.cpp
--- orig/src/ocl/batchnormocl.cpp	2021-10-06 21:04:47.337867104 +0800
+++ MIOpen-rocm-4.3.0/src/ocl/batchnormocl.cpp	2021-10-06 21:04:49.941804948 +0800
@@ -291,8 +291,8 @@ void BatchNormForwardTraining(Handle& ha
                         " -DMIO_BN_LDSGCN_SIZE=" + std::to_string(ldsgcn) + " -DMIO_BN_N=" +
                         std::to_string(n) + " -DMIO_BN_GRP0=" + std::to_string(xlocalsize) +
                         " -DMIO_BN_GRP1=" + std::to_string(ylocalsize) + " -DMIO_BN_GRP2=" +
-                        std::to_string(zlocalsize) + " -DMIO_BN_GFX1030=" +
-                        ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                        std::to_string(zlocalsize) + " -DMIO_BN_GFX1031=" +
+                        ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
                 if(variant != 4)
                 {
@@ -441,7 +441,7 @@ void BatchNormForwardTraining(Handle& ha
                     std::to_string(ldsgcn) + " -DMIO_BN_VARIANT=" + std::to_string(variant) +
                     " -DMIO_BN_GRP0=" + std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" +
                     std::to_string(ylocalsize) + " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) +
-                    " -DMIO_BN_GFX1030=" + ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                    " -DMIO_BN_GFX1031=" + ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
                 MIOPEN_LOG_I2(kernel_name << ":: " << parms);
 
@@ -560,8 +560,8 @@ void BatchNormForwardTraining(Handle& ha
                 " -DMIO_BN_LDS_SIZE=" + std::to_string(ylocalsize) + " -DMIO_BN_GRP0=" +
                 std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" + std::to_string(ylocalsize) +
                 " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) + " -DMIO_BN_NCHW=" +
-                std::to_string(in_nchw) + " -DMIO_BN_GFX1030=" +
-                ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                std::to_string(in_nchw) + " -DMIO_BN_GFX1031=" +
+                ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
             std::string program_name = "MIOpenBatchNormFwdTrainPerAct.cl";
             std::string kernel_name  = "MIOpenBatchNormFwdTrainPerActivation";
@@ -757,7 +757,7 @@ void BatchNormForwardInference(Handle& h
                 " -DMIOPEN_USE_FPMIX=" + std::to_string(static_cast<int>(bfpmixparm)) +
                 " -DMIO_BN_GRP0=" + std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" +
                 std::to_string(ylocalsize) + " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) +
-                " -DMIO_BN_GFX1030=" + ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                " -DMIO_BN_GFX1031=" + ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
             std::vector<size_t> vld;
             std::vector<size_t> vgd;
@@ -1111,8 +1111,8 @@ void BatchNormBackward(Handle& handle,
                         std::to_string(ldsgcn) + " -DMIO_BN_VARIANT=" + std::to_string(variant) +
                         " -DMIO_BN_GRP0=" + std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" +
                         std::to_string(ylocalsize) + " -DMIO_BN_GRP2=" +
-                        std::to_string(zlocalsize) + " -DMIO_BN_GFX1030=" +
-                        ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                        std::to_string(zlocalsize) + " -DMIO_BN_GFX1031=" +
+                        ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
                 }
 
                 MIOPEN_LOG_I2(kernel_name << ":: " << algo_name);
@@ -1227,7 +1227,7 @@ void BatchNormBackward(Handle& handle,
                     std::to_string(ldsgcn) + " -DMIO_BN_VARIANT=" + std::to_string(variant) +
                     " -DMIO_BN_GRP0=" + std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" +
                     std::to_string(ylocalsize) + " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) +
-                    " -DMIO_BN_GFX1030=" + ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                    " -DMIO_BN_GFX1031=" + ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
                 MIOPEN_LOG_I2(kernel_name << ":: " << parms);
 
@@ -1334,8 +1334,8 @@ void BatchNormBackward(Handle& handle,
                 " -DMIO_BN_NCHW=" + std::to_string(in_nchw) + " -DMIO_BN_NGRPS=" +
                 std::to_string(int(std::ceil(float(ygridsize) / ylocalsize))) + " -DMIO_BN_GRP0=" +
                 std::to_string(xlocalsize) + " -DMIO_BN_GRP1=" + std::to_string(ylocalsize) +
-                " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) + " -DMIO_BN_GFX1030=" +
-                ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+                " -DMIO_BN_GRP2=" + std::to_string(zlocalsize) + " -DMIO_BN_GFX1031=" +
+                ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
             if(useSaved)
             {
diff --color -upr orig/src/ocl/fusionopbiasbnactivocl.cpp MIOpen-rocm-4.3.0/src/ocl/fusionopbiasbnactivocl.cpp
--- orig/src/ocl/fusionopbiasbnactivocl.cpp	2021-10-06 21:04:47.337867104 +0800
+++ MIOpen-rocm-4.3.0/src/ocl/fusionopbiasbnactivocl.cpp	2021-10-06 21:04:49.941804948 +0800
@@ -388,7 +388,7 @@ miopenStatus_t BatchNormBwdTrainFusionOp
            std::to_string(ldsnogcn) + " -DMIO_BN_LDSGCN_SIZE=" + std::to_string(ldsgcn) +
            " -DMIO_BN_USESAVED=" + std::to_string(static_cast<int>(true)) + " -DMIO_BN_VARIANT=" +
            std::to_string(variant) + " -DMIO_BN_CBA_WRITE_INTERMEDIATE=" + std::to_string(0) +
-           " -DMIO_BN_GFX1030=" + ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+           " -DMIO_BN_GFX1031=" + ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
     compile_config += add;
     MIOPEN_LOG_I2(add);
@@ -599,7 +599,7 @@ miopenStatus_t BatchNormFwdTrainFusionOp
            " -DMIOPEN_READ_UNIT=" + std::to_string(read_unit) + " -DMIOPEN_READ_TYPE=" + READ_TYPE +
            " -DMIO_SAVE_MEAN_VARIANCE=" + (saveBatchStats ? "1" : "0") + " -DMIO_RUNNING_RESULT=" +
            ((savePopStats) ? "1" : "0") + " -DMIO_BN_VARIANT=" + std::to_string(variant) +
-           " -DMIO_BN_GFX1030=" + ((handle.GetDeviceName() == "gfx1030") ? "1" : "0");
+           " -DMIO_BN_GFX1031=" + ((handle.GetDeviceName() == "gfx1031") ? "1" : "0");
 
     compile_config += add;
     MIOPEN_LOG_I2(add);
diff --color -upr orig/src/target_properties.cpp MIOpen-rocm-4.3.0/src/target_properties.cpp
--- orig/src/target_properties.cpp	2021-10-06 21:04:47.341867009 +0800
+++ MIOpen-rocm-4.3.0/src/target_properties.cpp	2021-10-06 21:04:49.941804948 +0800
@@ -51,7 +51,7 @@ static std::string GetDeviceNameFromMap(
         {"gfx804", "gfx803"},
         {"Vega10", "gfx900"},
         {"gfx901", "gfx900"},
-        {"10.3.0 Sienna_Cichlid 18", "gfx1030"},
+        {"10.3.0 Navi_flounder 18", "gfx1031"},
     };
 
     const char* const p_asciz = miopen::GetStringEnv(MIOPEN_DEBUG_ENFORCE_DEVICE{});
diff --color -upr orig/test/handle_test.cpp MIOpen-rocm-4.3.0/test/handle_test.cpp
--- orig/test/handle_test.cpp	2021-10-06 21:04:47.341867009 +0800
+++ MIOpen-rocm-4.3.0/test/handle_test.cpp	2021-10-06 21:05:05.733428843 +0800
@@ -240,7 +240,7 @@ void test_warnings(kernel_type_t kern_ty
 void test_arch_name()
 {
     auto&& h        = get_handle();
-    auto known_arch = {"gfx908", "gfx906", "gfx900", "gfx803", "gfx1030"};
+    auto known_arch = {"gfx908", "gfx906", "gfx900", "gfx803", "gfx1030", "gfx1031"};
     auto this_arch  = h.GetDeviceName();
     EXPECT(std::any_of(
         known_arch.begin(), known_arch.end(), [&](std::string arch) { return arch == this_arch; }));
